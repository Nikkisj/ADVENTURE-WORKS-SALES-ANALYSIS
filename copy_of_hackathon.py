# -*- coding: utf-8 -*-
"""Copy_of_Hackathon.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yv8l1iGHAQDPCAio6FOvwPRMb1AoY6R4

## EDA And Feature Engineering Of Google Play Store Dataset

1) Problem statement.
Today, 1.85 million different apps are available for users to download. Android users have even more from which to choose, with 2.56 million available through the Google Play Store. These apps have come to play a huge role in the way we live our lives today. Our Objective is to find the Most Popular Category, find the App with largest number of installs , the App with largest size etc.
2) Data Collection.

The data consists of 20 column and 10841 rows.
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

from google.colab import drive
drive.mount('/content/drive')

df=pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Data Analytics Course/Datasets/googleplaystore.csv')

df.head()

df.info()

df.isnull().mean()*100  #percentage of null values

df['Rating'].fillna(df['Rating'].mean(),inplace=True) #fill na with mean

df.isnull().sum()

df.sample()

# Drop rows with any null values
df.dropna(inplace=True)

# Check for remaining null values
df.isnull().sum()

df.head()

#categories:
df['Category'].value_counts()

df.sample()

df['Installs'] = df['Installs'].str.replace('[+,]', '', regex=True).astype(float)

# Group data by 'Category' and sum 'Installs'
category_installs = df.groupby('Category')['Installs'].sum().reset_index()

# Create a bar chart with Plotly
fig = px.bar(category_installs, x='Category', y='Installs',
             title='Total Installs by Category',
             labels={'Installs': 'Total Installs', 'Category': 'App Category'})

# Show the plot
fig.show()

"""Documentation
Game has highest insatlls and weather has least
"""

df['Reviews']=df['Reviews'].astype('int')

#Ratings
cat_ratings = df.groupby("Category")['Rating'].sum().sort_values(ascending = False).head(10).reset_index()
sns.barplot(data=cat_ratings,x='Category',y='Rating',palette='viridis')
plt.xticks(rotation = 90)
plt.show()

"""**Documentation**

Family has highest rating and lifestyle has least
"""

#top apps vs reviews
app_review=df.groupby("App")['Reviews'].sum().sort_values(ascending = False).head(10).reset_index()
sns.barplot(data=app_review,x='App',y='Reviews',palette='viridis')
plt.xticks(rotation = 90)
plt.show()

"""Documentation
Instagram has highest reviews and snapchat has lowest
"""

# Rating vs reviews

# Create a scatter plot of Rating vs Reviews
fig = px.scatter(df, x="Rating", y="Reviews",
                 title="Rating vs Reviews",
                 labels={"Rating": "App Rating", "Reviews": "Number of Reviews"})
fig

"""Documentation
4.5 has high reviews as compared to others
"""

df.info()

df['Size'].value_counts()

df.sample()

df['Installs'].value_counts()

df['Price'] = df['Price'].replace('$', '').astype('int')

df['Price'].value_counts()



df.sample()

df['Type'].value_counts()

df['Content Rating'].value_counts()

sns.countplot()

df.sample()

df['Year']=df['Last Updated'].apply(lambda x: x.split(',')[-1]).astype(int)

df.sample()

df['Current Ver'].value_counts()

df.shape

df['Installs']=df['Installs'].apply(lambda x: x.replace('+',''))

df['Installs'].value_counts()

df.to_csv('Cleaned Playstore.csv')